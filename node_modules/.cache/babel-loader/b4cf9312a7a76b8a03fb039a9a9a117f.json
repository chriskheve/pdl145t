{"ast":null,"code":"import { createElement, Component } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar VIEWBOX_WIDTH = 100;\nvar VIEWBOX_HEIGHT = 100;\nvar VIEWBOX_HEIGHT_HALF = 50;\nvar VIEWBOX_CENTER_X = 50;\nvar VIEWBOX_CENTER_Y = 50;\n\nfunction Path(_a) {\n  var className = _a.className,\n      counterClockwise = _a.counterClockwise,\n      dashRatio = _a.dashRatio,\n      pathRadius = _a.pathRadius,\n      strokeWidth = _a.strokeWidth,\n      style = _a.style;\n  return createElement(\"path\", {\n    className: className,\n    style: Object.assign({}, style, getDashStyle({\n      pathRadius: pathRadius,\n      dashRatio: dashRatio,\n      counterClockwise: counterClockwise\n    })),\n    d: getPathDescription({\n      pathRadius: pathRadius,\n      counterClockwise: counterClockwise\n    }),\n    strokeWidth: strokeWidth,\n    fillOpacity: 0\n  });\n}\n\nfunction getPathDescription(_a) {\n  var pathRadius = _a.pathRadius,\n      counterClockwise = _a.counterClockwise;\n  var radius = pathRadius;\n  var rotation = counterClockwise ? 1 : 0;\n  return \"\\n      M \" + VIEWBOX_CENTER_X + \",\" + VIEWBOX_CENTER_Y + \"\\n      m 0,-\" + radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,\" + 2 * radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,-\" + 2 * radius + \"\\n    \";\n}\n\nfunction getDashStyle(_a) {\n  var counterClockwise = _a.counterClockwise,\n      dashRatio = _a.dashRatio,\n      pathRadius = _a.pathRadius;\n  var diameter = Math.PI * 2 * pathRadius;\n  var gapLength = (1 - dashRatio) * diameter;\n  return {\n    strokeDasharray: diameter + \"px \" + diameter + \"px\",\n    strokeDashoffset: (counterClockwise ? -gapLength : gapLength) + \"px\"\n  };\n}\n\nvar CircularProgressbar = function (_super) {\n  __extends(CircularProgressbar, _super);\n\n  function CircularProgressbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CircularProgressbar.prototype.getBackgroundPadding = function () {\n    if (!this.props.background) {\n      return 0;\n    }\n\n    return this.props.backgroundPadding;\n  };\n\n  CircularProgressbar.prototype.getPathRadius = function () {\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  };\n\n  CircularProgressbar.prototype.getPathRatio = function () {\n    var _a = this.props,\n        value = _a.value,\n        minValue = _a.minValue,\n        maxValue = _a.maxValue;\n    var boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  };\n\n  CircularProgressbar.prototype.render = function () {\n    var _a = this.props,\n        circleRatio = _a.circleRatio,\n        className = _a.className,\n        classes = _a.classes,\n        counterClockwise = _a.counterClockwise,\n        styles = _a.styles,\n        strokeWidth = _a.strokeWidth,\n        text = _a.text;\n    var pathRadius = this.getPathRadius();\n    var pathRatio = this.getPathRatio();\n    return createElement(\"svg\", {\n      className: classes.root + \" \" + className,\n      style: styles.root,\n      viewBox: \"0 0 \" + VIEWBOX_WIDTH + \" \" + VIEWBOX_HEIGHT,\n      \"data-test-id\": \"CircularProgressbar\"\n    }, this.props.background ? createElement(\"circle\", {\n      className: classes.background,\n      style: styles.background,\n      cx: VIEWBOX_CENTER_X,\n      cy: VIEWBOX_CENTER_Y,\n      r: VIEWBOX_HEIGHT_HALF\n    }) : null, createElement(Path, {\n      className: classes.trail,\n      counterClockwise: counterClockwise,\n      dashRatio: circleRatio,\n      pathRadius: pathRadius,\n      strokeWidth: strokeWidth,\n      style: styles.trail\n    }), createElement(Path, {\n      className: classes.path,\n      counterClockwise: counterClockwise,\n      dashRatio: pathRatio * circleRatio,\n      pathRadius: pathRadius,\n      strokeWidth: strokeWidth,\n      style: styles.path\n    }), text ? createElement(\"text\", {\n      className: classes.text,\n      style: styles.text,\n      x: VIEWBOX_CENTER_X,\n      y: VIEWBOX_CENTER_Y\n    }, text) : null);\n  };\n\n  CircularProgressbar.defaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background'\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {}\n    },\n    text: ''\n  };\n  return CircularProgressbar;\n}(Component);\n\nfunction CircularProgressbarWithChildren(props) {\n  var children = props.children,\n      circularProgressbarProps = __rest(props, [\"children\"]);\n\n  return createElement(\"div\", {\n    \"data-test-id\": \"CircularProgressbarWithChildren\"\n  }, createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    }\n  }, createElement(CircularProgressbar, _assign({}, circularProgressbarProps)), props.children ? createElement(\"div\", {\n    \"data-test-id\": \"CircularProgressbarWithChildren__children\",\n    style: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      marginTop: '-100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, props.children) : null));\n}\n\nfunction buildStyles(_a) {\n  var rotation = _a.rotation,\n      strokeLinecap = _a.strokeLinecap,\n      textColor = _a.textColor,\n      textSize = _a.textSize,\n      pathColor = _a.pathColor,\n      pathTransition = _a.pathTransition,\n      pathTransitionDuration = _a.pathTransitionDuration,\n      trailColor = _a.trailColor,\n      backgroundColor = _a.backgroundColor;\n  var rotationTransform = rotation == null ? undefined : \"rotate(\" + rotation + \"turn)\";\n  var rotationTransformOrigin = rotation == null ? undefined : 'center center';\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : pathTransitionDuration + \"s\"\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor\n    })\n  };\n}\n\nfunction removeUndefinedValues(obj) {\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n\nexport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles };","map":{"version":3,"sources":["../src/constants.ts","../src/Path.tsx","../src/CircularProgressbar.tsx","../src/CircularProgressbarWithChildren.tsx","../src/buildStyles.ts"],"names":["React.createElement","React.Component"],"mappings":"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","sourcesContent":["export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","import * as React from 'react';\n\nimport CircularProgressbar from './CircularProgressbar';\nimport { CircularProgressbarWrapperProps } from './types';\n\ntype CircularProgressbarWithChildrenProps = CircularProgressbarWrapperProps & {\n  children?: React.ReactNode;\n};\n\n// This is a wrapper around CircularProgressbar that allows passing children,\n// which will be vertically and horizontally centered inside the progressbar automatically.\nfunction CircularProgressbarWithChildren(props: CircularProgressbarWithChildrenProps) {\n  const { children, ...circularProgressbarProps } = props;\n\n  return (\n    <div data-test-id=\"CircularProgressbarWithChildren\">\n      {/* Has an extra div wrapper because otherwise, adding content after\n      this progressbar is spaced weirdly. */}\n      <div style={{ position: 'relative', width: '100%', height: '100%' }}>\n        {/* Progressbar is not positioned absolutely, so that it can establish\n      intrinsic size for props.children's content. */}\n        <CircularProgressbar {...circularProgressbarProps} />\n\n        {/* Children are positioned absolutely, and height adapts to the\n      progressbar's intrinsic size. It appears below the progressbar,\n      but negative margin moves it back up. */}\n        {props.children ? (\n          <div\n            data-test-id=\"CircularProgressbarWithChildren__children\"\n            style={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              marginTop: '-100%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            {props.children}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default CircularProgressbarWithChildren;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}